package mydatas.tx.xOpen;

/**
 * 事务特性：ACID
 *
 * CAP理论{
 *     C: 一致性
 *     A: 可用性
 *     P: 可分区(分区容忍性)
 *
 *     一致性和可用性是矛盾的，
 *     AP模型：追求可用性
 *     CP模型：追求一致性
 * }
 *
 * base理论{
 *      basically available: 基本可用。允许系统损失部分性能(降级)
 *      Soft state: 软状态。系统中的数据存在中间状态，并且认为该中间状态的存在不会影响系统的可用性
 *      Eventually consistent: 最终一致性。所有数据的更新操作，
 *                                      在经过一段时间同步之后，最终都能达到一个一致的状态
 * }
 *
 * 柔性事务{
 *     最大努力通知(非可靠消息、定期校对)。对数据的一致性要求不是很高
 *     可靠消息最终一致性，异步确保型。用的较多
 *     TCC.事务补偿2PC补偿等
 * }
 */
public class A_TX_BASE {
}
